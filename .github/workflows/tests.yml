name: Tests

on:
  push:
    branches: [ custom_state_management ]
    paths-ignore:
      - 'README.org'
      - '.gitignore'
  pull_request:
    branches: [ custom_state_management ]
    paths-ignore:
      - 'README.org'
      - '.gitignore'

jobs:
  build:

    strategy:
      matrix:
        python-version: [3.8, 3.9]
        poetry-version: [1.1.4]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
        
    - name: Configure poetry
      shell: bash
      run: poetry config virtualenvs.in-project true

    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
         path: .venv
         key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      shell: bash
      run: poetry install

    - name: Run pytest
      shell: bash
      run: poetry run python -m pytest -p no:sugar -q tests/
